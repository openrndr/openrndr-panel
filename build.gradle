buildscript {
    ext.openrndr_version = "0.3.39"
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
        classpath "com.netflix.nebula:nebula-kotlin-plugin:1.3.61"
        classpath "com.netflix.nebula:nebula-publishing-plugin:17.0.5"
        classpath "com.netflix.nebula:nebula-release-plugin:14.1.0"
        classpath "com.netflix.nebula:nebula-bintray-plugin:8.3.0"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'nebula.kotlin'
apply plugin: 'nebula.contacts'
apply plugin: 'nebula.info'
apply plugin: 'nebula.release'
apply plugin: 'nebula.maven-publish'

apply plugin: 'nebula.nebula-bintray-publishing'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.nebula-bintray-publishing'

group 'org.openrndr.panel'

repositories {
    jcenter()
    maven { url = "https://dl.bintray.com/openrndr/openrndr" }
}

dependencies {
    compile('io.reactivex.rxjava2:rxjava:2.2.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    implementation 'io.github.microutils:kotlin-logging:1.7.8'

    compile 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation "org.openrndr:openrndr-svg:$openrndr_version"
    implementation "org.openrndr:openrndr-filter:$openrndr_version"
    implementation "org.openrndr:openrndr-animatable:$openrndr_version"
    implementation "org.openrndr:openrndr-binpack:$openrndr_version"
}

bintray {
    user = findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    apiKey = findProperty('bintrayKey') ?: System.getenv('BINTRAY_KEY')
    userOrg = 'openrndr'
    repo = 'openrndr'
    pkgName = 'openrndr-panel'
    gppSign = false
    syncToMavenCentral = false
    licenses = ['BSD-2-Clause']
    vcsUrl = 'https://github.com/openrndr/openrndr-panel.git'
    websiteUrl = 'https://www.openrndr.org'
    issueTrackerUrl = 'https://github.com/openrndr/openrndr-panel/issues'
    labels = ['creative-coding', 'realtime-rendering', 'opengl', 'gui']
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }
